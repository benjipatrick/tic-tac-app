{"version":3,"sources":["index.js"],"names":["Square","props","className","isButtonDisabled","onClick","disabled","value","Board","i","this","winner","squares","isPlayerTurn","renderSquare","React","Component","Game","state","Array","fill","isXTurn","handleClick","bind","handlePress","endOfPlayerTurn","a","console","log","fetch","method","cache","headers","body","JSON","stringify","response","ok","Error","statusText","json","nextMove","status","setState","slice","indexOf","GetGameStatus","playerInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14b718cc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\n\n\nfunction Square(props) {\n      return (\n        <div className={props.isButtonDisabled ? 'box noHover' : 'box'}>\n            <button \n                className=\"button\" \n                onClick={props.onClick}\n                disabled={props.isButtonDisabled}\n            >\n                {props.value}\n            </button>\n        </div>\n      );\n  }\n  \nclass Board extends React.Component {\n  \n    renderSquare(i) {\n      const isButtonDisabled = this.props.winner !== -2 || this.props.squares[i] != null || !this.props.isPlayerTurn;\n        return <Square \n        className='square'\n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n        winner={this.props.winner}\n        isButtonDisabled={isButtonDisabled}\n        />;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='game-board'>\n                    {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\n                    {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\n                    {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n  \nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        squares: Array(9).fill(null),\n        isXTurn: true,\n        winner: -2,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handlePress = this.handlePress.bind(this);\n  }\n\n  componentDidMount() {\n\n  }\n\n  async GetGameStatus(squares, endOfPlayerTurn) {\n    console.log(\"Making Game Status Request\")\n    try {\n      const response = await fetch('https://tic-tac-app-me.herokuapp.com/game/status', {\n        method:\"POST\",\n          cache: \"no-cache\",\n          headers:{\n              \"content_type\":\"application/json\",\n          },\n          body:JSON.stringify(squares)\n        })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      const json = await response.json();\n\n      const nextMove = json[1]\n      var status = json[0];\n      console.log(\"status: \"+status)\n      \n      if (status == null) {\n        status = -2\n      }\n\n      this.setState({\n        winner:status\n      })\n      \n      if (!endOfPlayerTurn && status == -2) {\n        console.log(\"next move: \"+nextMove)\n        squares = this.state.squares.slice()\n        if (nextMove == null) {\n          console.log(\"invalid move\")\n          squares[squares.indexOf(null)] = 'O'\n        } else {\n          squares[nextMove] = 'O'\n        }\n        \n        this.setState({\n          squares:squares,\n          isXTurn: !this.state.isXTurn,\n        })\n        this.GetGameStatus(squares, true)\n      } \n      \n     \n  \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.isXTurn ? 'X' : 'O';\n\n    this.setState({\n      squares: squares,\n      isXTurn: !this.state.isXTurn,  \n    })\n\n    this.GetGameStatus(squares, false)\n  }\n\n  handlePress() {\n    this.setState({\n        squares: Array(9).fill(null),\n        isXTurn: true,\n        winner: -2,\n    });\n  }\n\n  render() {\n\n    var playerInfo;\n\n    if (this.state.winner == 0) {\n      playerInfo = 'Draw';\n    } else if (this.state.winner != -2) {\n      playerInfo = (this.state.winner==1 ? 'X' : 'O')   + ' Wins!!!';\n    } else {\n      playerInfo = 'Player Turn: ' +  (this.state.isXTurn ? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n          <Board \n            squares={this.state.squares}\n            onClick={(i) => this.handleClick(i)}\n            winner={this.state.winner}\n            isPlayerTurn={this.state.isXTurn}\n          />\n        <div className=\"game-info\">\n          <div className=\"current-player\">{playerInfo}</div>\n          <br></br>\n          <button \n              className=\"restart-button\"\n              onClick={() => this.handlePress()}\n              >Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}